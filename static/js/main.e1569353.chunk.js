(this["webpackJsonpreact-webgl"]=this["webpackJsonpreact-webgl"]||[]).push([[0],{39:function(n,e,t){},40:function(n,e,t){},42:function(n,e,t){},43:function(n,e,t){},49:function(n,e,t){},50:function(n,e,t){},51:function(n,e,t){},52:function(n,e,t){"use strict";t.r(e);var r,o,i,a,c,l=t(0),C=t(21),s=t.n(C),f=(t(39),t(22)),u=t(5),p=t(61),d=["title","titleId"];function m(){return(m=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}function h(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}function v(n,e){var t=n.title,C=n.titleId,s=h(n,d);return l.createElement("svg",m({width:405,height:114,viewBox:"0 0 405 114",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:e,"aria-labelledby":C},s),t?l.createElement("title",{id:C},t):null,r||(r=l.createElement("mask",{id:"path-1-outside-1",maskUnits:"userSpaceOnUse",x:.5,y:.199951,width:404,height:113,fill:"black"},l.createElement("rect",{fill:"white",x:.5,y:.199951,width:404,height:113}),l.createElement("path",{d:"M2.5 106.9H19.15V4.29995H2.5V2.19995H50.8V4.29995H34.15V53.3499H84.1V4.29995H67.45V2.19995H115.75V4.29995H99.1V106.9H115.75V109H67.45V106.9H84.1V55.45H34.15V106.9H50.8V109H2.5V106.9Z"}),l.createElement("path",{d:"M142.064 76.8999C142.064 83.9999 142.614 89.65 143.714 93.85C144.814 98.05 146.264 101.3 148.064 103.6C149.864 105.8 151.964 107.25 154.364 107.95C156.764 108.65 159.314 109 162.014 109C164.714 109 167.264 108.65 169.664 107.95C172.064 107.25 174.164 105.8 175.964 103.6C177.764 101.3 179.214 98.05 180.314 93.85C181.414 89.65 181.964 83.9999 181.964 76.8999C181.964 70.8999 181.564 65.9 180.764 61.9C179.964 57.8 178.714 54.5 177.014 52C175.414 49.4 173.364 47.5499 170.864 46.4499C168.364 45.3499 165.414 44.7999 162.014 44.7999C158.614 44.7999 155.664 45.3499 153.164 46.4499C150.664 47.5499 148.564 49.4 146.864 52C145.264 54.5 144.064 57.8 143.264 61.9C142.464 65.9 142.064 70.8999 142.064 76.8999ZM127.064 76.8999C127.064 71.9999 128.114 67.45 130.214 63.25C132.414 59.05 135.164 55.45 138.464 52.45C141.864 49.3499 145.614 46.9499 149.714 45.25C153.914 43.5499 158.014 42.6999 162.014 42.6999C166.014 42.6999 170.064 43.5499 174.164 45.25C178.364 46.9499 182.114 49.3499 185.414 52.45C188.814 55.45 191.564 59.05 193.664 63.25C195.864 67.45 196.964 71.9999 196.964 76.8999C196.964 81.5999 195.964 86.05 193.964 90.25C191.964 94.35 189.314 97.9499 186.014 101.05C182.814 104.15 179.114 106.6 174.914 108.4C170.714 110.2 166.414 111.1 162.014 111.1C157.614 111.1 153.314 110.2 149.114 108.4C144.914 106.6 141.164 104.15 137.864 101.05C134.664 97.9499 132.064 94.35 130.064 90.25C128.064 86.05 127.064 81.5999 127.064 76.8999Z"}),l.createElement("path",{d:"M206.664 106.9H218.214V46.75H206.664V44.6499H230.814V60.4H231.114C233.214 54.4 236.214 49.9999 240.114 47.1999C244.114 44.3999 248.914 43 254.514 43C259.514 43 263.914 44.0999 267.714 46.2999C271.614 48.4999 274.164 52.15 275.364 57.25H275.664C276.364 55.45 277.314 53.7 278.514 52C279.714 50.3 281.214 48.8 283.014 47.5C284.814 46.1 286.914 44.9999 289.314 44.2C291.814 43.3999 294.614 43 297.714 43C312.314 43 319.614 50.45 319.614 65.35V106.9H331.164V109H295.164V106.9H306.714V55.9C306.714 52.5 305.764 49.85 303.864 47.95C302.064 46.0499 299.564 45.0999 296.364 45.0999C293.864 45.0999 291.364 45.6 288.864 46.6C286.364 47.5 284.114 48.9 282.114 50.7999C280.114 52.6999 278.464 55.15 277.164 58.15C275.964 61.15 275.364 64.6499 275.364 68.6499V106.9H286.914V109H250.914V106.9H262.464V58C262.464 53.6 261.564 50.3499 259.764 48.2499C257.964 46.1499 255.564 45.0999 252.564 45.0999C250.464 45.0999 248.164 45.6499 245.664 46.75C243.164 47.7499 240.814 49.3999 238.614 51.6999C236.514 53.8999 234.714 56.8 233.214 60.4C231.814 64 231.114 68.4 231.114 73.6V106.9H242.664V109H206.664V106.9Z"}),l.createElement("path",{d:"M386.982 69.7C387.182 68.3 387.282 66.9999 387.282 65.7999C387.282 64.6 387.282 63.35 387.282 62.0499C387.282 58.65 386.932 55.85 386.232 53.65C385.632 51.45 384.732 49.7 383.532 48.4C382.432 47.1 381.032 46.2 379.332 45.7C377.732 45.0999 375.982 44.7999 374.082 44.7999C370.682 44.7999 367.882 45.4999 365.682 46.8999C363.482 48.1999 361.732 49.9999 360.432 52.2999C359.132 54.5999 358.132 57.25 357.432 60.25C356.832 63.25 356.432 66.4 356.232 69.7H386.982ZM356.082 71.7999C356.082 72.8 356.032 73.85 355.932 74.95C355.932 75.95 355.932 77.25 355.932 78.85C355.932 82.15 356.132 85.5999 356.532 89.2C356.932 92.8 357.782 96.05 359.082 98.95C360.482 101.85 362.482 104.25 365.082 106.15C367.782 108.05 371.332 109 375.732 109C380.132 109 383.732 108.35 386.532 107.05C389.432 105.75 391.682 104.2 393.282 102.4C394.982 100.5 396.232 98.6 397.032 96.7C397.832 94.8 398.432 93.2499 398.832 92.0499L401.082 92.5C400.782 93.6 400.182 95.1999 399.282 97.2999C398.482 99.2999 397.132 101.35 395.232 103.45C393.432 105.45 390.932 107.25 387.732 108.85C384.632 110.35 380.582 111.1 375.582 111.1C370.582 111.1 365.932 110.3 361.632 108.7C357.432 107.1 353.782 104.8 350.682 101.8C347.582 98.7999 345.182 95.25 343.482 91.15C341.782 86.95 340.932 82.3 340.932 77.2C340.932 72.8 341.782 68.55 343.482 64.45C345.282 60.25 347.682 56.5499 350.682 53.3499C353.782 50.1499 357.382 47.6 361.482 45.7C365.582 43.7 369.982 42.6999 374.682 42.6999C377.482 42.6999 380.482 43.1999 383.682 44.2C386.882 45.2 389.832 46.85 392.532 49.15C395.332 51.35 397.632 54.3 399.432 58C401.332 61.7 402.282 66.3 402.282 71.7999H356.082Z"}))),o||(o=l.createElement("path",{d:"M2.5 106.9H19.15V4.29995H2.5V2.19995H50.8V4.29995H34.15V53.3499H84.1V4.29995H67.45V2.19995H115.75V4.29995H99.1V106.9H115.75V109H67.45V106.9H84.1V55.45H34.15V106.9H50.8V109H2.5V106.9Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})),i||(i=l.createElement("path",{d:"M142.064 76.8999C142.064 83.9999 142.614 89.65 143.714 93.85C144.814 98.05 146.264 101.3 148.064 103.6C149.864 105.8 151.964 107.25 154.364 107.95C156.764 108.65 159.314 109 162.014 109C164.714 109 167.264 108.65 169.664 107.95C172.064 107.25 174.164 105.8 175.964 103.6C177.764 101.3 179.214 98.05 180.314 93.85C181.414 89.65 181.964 83.9999 181.964 76.8999C181.964 70.8999 181.564 65.9 180.764 61.9C179.964 57.8 178.714 54.5 177.014 52C175.414 49.4 173.364 47.5499 170.864 46.4499C168.364 45.3499 165.414 44.7999 162.014 44.7999C158.614 44.7999 155.664 45.3499 153.164 46.4499C150.664 47.5499 148.564 49.4 146.864 52C145.264 54.5 144.064 57.8 143.264 61.9C142.464 65.9 142.064 70.8999 142.064 76.8999ZM127.064 76.8999C127.064 71.9999 128.114 67.45 130.214 63.25C132.414 59.05 135.164 55.45 138.464 52.45C141.864 49.3499 145.614 46.9499 149.714 45.25C153.914 43.5499 158.014 42.6999 162.014 42.6999C166.014 42.6999 170.064 43.5499 174.164 45.25C178.364 46.9499 182.114 49.3499 185.414 52.45C188.814 55.45 191.564 59.05 193.664 63.25C195.864 67.45 196.964 71.9999 196.964 76.8999C196.964 81.5999 195.964 86.05 193.964 90.25C191.964 94.35 189.314 97.9499 186.014 101.05C182.814 104.15 179.114 106.6 174.914 108.4C170.714 110.2 166.414 111.1 162.014 111.1C157.614 111.1 153.314 110.2 149.114 108.4C144.914 106.6 141.164 104.15 137.864 101.05C134.664 97.9499 132.064 94.35 130.064 90.25C128.064 86.05 127.064 81.5999 127.064 76.8999Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})),a||(a=l.createElement("path",{d:"M206.664 106.9H218.214V46.75H206.664V44.6499H230.814V60.4H231.114C233.214 54.4 236.214 49.9999 240.114 47.1999C244.114 44.3999 248.914 43 254.514 43C259.514 43 263.914 44.0999 267.714 46.2999C271.614 48.4999 274.164 52.15 275.364 57.25H275.664C276.364 55.45 277.314 53.7 278.514 52C279.714 50.3 281.214 48.8 283.014 47.5C284.814 46.1 286.914 44.9999 289.314 44.2C291.814 43.3999 294.614 43 297.714 43C312.314 43 319.614 50.45 319.614 65.35V106.9H331.164V109H295.164V106.9H306.714V55.9C306.714 52.5 305.764 49.85 303.864 47.95C302.064 46.0499 299.564 45.0999 296.364 45.0999C293.864 45.0999 291.364 45.6 288.864 46.6C286.364 47.5 284.114 48.9 282.114 50.7999C280.114 52.6999 278.464 55.15 277.164 58.15C275.964 61.15 275.364 64.6499 275.364 68.6499V106.9H286.914V109H250.914V106.9H262.464V58C262.464 53.6 261.564 50.3499 259.764 48.2499C257.964 46.1499 255.564 45.0999 252.564 45.0999C250.464 45.0999 248.164 45.6499 245.664 46.75C243.164 47.7499 240.814 49.3999 238.614 51.6999C236.514 53.8999 234.714 56.8 233.214 60.4C231.814 64 231.114 68.4 231.114 73.6V106.9H242.664V109H206.664V106.9Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})),c||(c=l.createElement("path",{d:"M386.982 69.7C387.182 68.3 387.282 66.9999 387.282 65.7999C387.282 64.6 387.282 63.35 387.282 62.0499C387.282 58.65 386.932 55.85 386.232 53.65C385.632 51.45 384.732 49.7 383.532 48.4C382.432 47.1 381.032 46.2 379.332 45.7C377.732 45.0999 375.982 44.7999 374.082 44.7999C370.682 44.7999 367.882 45.4999 365.682 46.8999C363.482 48.1999 361.732 49.9999 360.432 52.2999C359.132 54.5999 358.132 57.25 357.432 60.25C356.832 63.25 356.432 66.4 356.232 69.7H386.982ZM356.082 71.7999C356.082 72.8 356.032 73.85 355.932 74.95C355.932 75.95 355.932 77.25 355.932 78.85C355.932 82.15 356.132 85.5999 356.532 89.2C356.932 92.8 357.782 96.05 359.082 98.95C360.482 101.85 362.482 104.25 365.082 106.15C367.782 108.05 371.332 109 375.732 109C380.132 109 383.732 108.35 386.532 107.05C389.432 105.75 391.682 104.2 393.282 102.4C394.982 100.5 396.232 98.6 397.032 96.7C397.832 94.8 398.432 93.2499 398.832 92.0499L401.082 92.5C400.782 93.6 400.182 95.1999 399.282 97.2999C398.482 99.2999 397.132 101.35 395.232 103.45C393.432 105.45 390.932 107.25 387.732 108.85C384.632 110.35 380.582 111.1 375.582 111.1C370.582 111.1 365.932 110.3 361.632 108.7C357.432 107.1 353.782 104.8 350.682 101.8C347.582 98.7999 345.182 95.25 343.482 91.15C341.782 86.95 340.932 82.3 340.932 77.2C340.932 72.8 341.782 68.55 343.482 64.45C345.282 60.25 347.682 56.5499 350.682 53.3499C353.782 50.1499 357.382 47.6 361.482 45.7C365.582 43.7 369.982 42.6999 374.682 42.6999C377.482 42.6999 380.482 43.1999 383.682 44.2C386.882 45.2 389.832 46.85 392.532 49.15C395.332 51.35 397.632 54.3 399.432 58C401.332 61.7 402.282 66.3 402.282 71.7999H356.082Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})))}var H,g,w,b,V,x,y=l.forwardRef(v),j=(t.p,t(40),t(1)),O=function(){return Object(j.jsx)("div",{className:"page",id:"home",children:Object(j.jsx)("div",{className:"hero-container",children:Object(j.jsx)(y,{})})})},k=["title","titleId"];function L(){return(L=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n}).apply(this,arguments)}function R(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}function E(n,e){var t=n.title,r=n.titleId,o=R(n,k);return l.createElement("svg",L({width:434,height:115,viewBox:"0 0 434 115",fill:"none",xmlns:"http://www.w3.org/2000/svg",ref:e,"aria-labelledby":r},o),t?l.createElement("title",{id:r},t):null,H||(H=l.createElement("mask",{id:"path-1-outside-1",maskUnits:"userSpaceOnUse",x:0,y:0,width:434,height:115,fill:"black"},l.createElement("rect",{fill:"white",width:434,height:115}),l.createElement("path",{d:"M2 3.35H47.15V5.45H31.55L62.45 92.45H62.75L82.7 37.1L71.3 5.45H58.7V3.35H103.7V5.45H87.35L118.25 92.45H118.55L150.05 5.45H134V3.35H166.1V5.45H152.6L113.75 112.4H110L84.2 40.4H83.9L57.8 112.4H53.75L15.5 5.45H2V3.35Z"}),l.createElement("path",{d:"M171.441 78.05C171.441 85.15 171.991 90.8 173.091 95C174.191 99.2 175.641 102.45 177.441 104.75C179.241 106.95 181.341 108.4 183.741 109.1C186.141 109.8 188.691 110.15 191.391 110.15C194.091 110.15 196.641 109.8 199.041 109.1C201.441 108.4 203.541 106.95 205.341 104.75C207.141 102.45 208.591 99.2 209.691 95C210.791 90.8 211.341 85.15 211.341 78.05C211.341 72.05 210.941 67.05 210.141 63.05C209.341 58.95 208.091 55.65 206.391 53.15C204.791 50.55 202.741 48.7 200.241 47.6C197.741 46.5 194.791 45.95 191.391 45.95C187.991 45.95 185.041 46.5 182.541 47.6C180.041 48.7 177.941 50.55 176.241 53.15C174.641 55.65 173.441 58.95 172.641 63.05C171.841 67.05 171.441 72.05 171.441 78.05ZM156.441 78.05C156.441 73.15 157.491 68.6 159.591 64.4C161.791 60.2 164.541 56.6 167.841 53.6C171.241 50.5 174.991 48.1 179.091 46.4C183.291 44.7 187.391 43.85 191.391 43.85C195.391 43.85 199.441 44.7 203.541 46.4C207.741 48.1 211.491 50.5 214.791 53.6C218.191 56.6 220.941 60.2 223.041 64.4C225.241 68.6 226.341 73.15 226.341 78.05C226.341 82.75 225.341 87.2 223.341 91.4C221.341 95.5 218.691 99.1 215.391 102.2C212.191 105.3 208.491 107.75 204.291 109.55C200.091 111.35 195.791 112.25 191.391 112.25C186.991 112.25 182.691 111.35 178.491 109.55C174.291 107.75 170.541 105.3 167.241 102.2C164.041 99.1 161.441 95.5 159.441 91.4C157.441 87.2 156.441 82.75 156.441 78.05Z"}),l.createElement("path",{d:"M237.091 108.05H248.641V47.9H237.091V45.8H261.241V60.95H261.541C261.941 59.45 262.591 57.75 263.491 55.85C264.391 53.95 265.641 52.15 267.241 50.45C268.841 48.65 270.741 47.15 272.941 45.95C275.241 44.75 277.991 44.15 281.191 44.15C283.491 44.15 285.491 44.55 287.191 45.35C288.891 46.05 290.291 47 291.391 48.2C292.491 49.3 293.291 50.6 293.791 52.1C294.291 53.6 294.541 55.1 294.541 56.6C294.541 59.9 293.791 62.1 292.291 63.2C290.791 64.3 289.041 64.85 287.041 64.85C282.641 64.85 280.441 63.45 280.441 60.65C280.441 59.75 280.541 59.05 280.741 58.55C280.941 57.95 281.141 57.4 281.341 56.9C281.641 56.3 281.891 55.65 282.091 54.95C282.291 54.25 282.391 53.25 282.391 51.95C282.391 48.75 280.641 47.15 277.141 47.15C275.541 47.15 273.841 47.75 272.041 48.95C270.241 50.15 268.541 51.9 266.941 54.2C265.441 56.5 264.141 59.3 263.041 62.6C262.041 65.8 261.541 69.5 261.541 73.7V108.05H274.591V110.15H237.091V108.05Z"}),l.createElement("path",{d:"M298.325 108.05H309.875V4.1H298.325V2H322.775V73.7H324.425L354.275 47.9H343.625V45.8H366.875V47.9H357.875L334.475 68L367.625 108.05H374.075V110.15H340.325V108.05H350.975L324.425 75.8H322.775V108.05H331.025V110.15H298.325V108.05Z"}),l.createElement("path",{d:"M383.091 89.15H384.741C385.441 91.55 386.341 94 387.441 96.5C388.541 98.9 389.991 101.15 391.791 103.25C393.691 105.25 395.991 106.9 398.691 108.2C401.391 109.5 404.641 110.15 408.441 110.15C411.641 110.15 414.491 109.2 416.991 107.3C419.491 105.3 420.741 102.1 420.741 97.7C420.741 93.9 419.741 91.25 417.741 89.75C415.841 88.15 413.591 86.9 410.991 86L399.291 81.95C397.791 81.45 396.141 80.85 394.341 80.15C392.641 79.35 391.041 78.3 389.541 77C388.041 75.6 386.791 73.85 385.791 71.75C384.891 69.65 384.441 66.95 384.441 63.65C384.441 60.85 384.991 58.25 386.091 55.85C387.191 53.45 388.691 51.35 390.591 49.55C392.491 47.75 394.741 46.35 397.341 45.35C400.041 44.35 402.941 43.85 406.041 43.85C408.241 43.85 409.991 44.05 411.291 44.45C412.691 44.75 413.891 45.1 414.891 45.5C415.891 45.8 416.791 46.15 417.591 46.55C418.391 46.85 419.341 47 420.441 47C421.541 47 422.341 46.6 422.841 45.8H424.491V62.9H422.841C422.141 60.7 421.341 58.6 420.441 56.6C419.541 54.5 418.441 52.65 417.141 51.05C415.941 49.45 414.391 48.2 412.491 47.3C410.691 46.4 408.541 45.95 406.041 45.95C401.241 45.95 397.491 47.05 394.791 49.25C392.191 51.35 390.891 54.2 390.891 57.8C390.891 61 391.991 63.45 394.191 65.15C396.491 66.75 399.841 68.25 404.241 69.65L415.191 73.25C419.891 74.85 423.741 77.05 426.741 79.85C429.741 82.65 431.241 86.35 431.241 90.95C431.241 93.65 430.691 96.3 429.591 98.9C428.591 101.5 427.041 103.8 424.941 105.8C422.941 107.7 420.441 109.25 417.441 110.45C414.541 111.65 411.191 112.25 407.391 112.25C405.191 112.25 403.141 112 401.241 111.5C399.441 111.1 397.741 110.65 396.141 110.15C394.641 109.65 393.241 109.2 391.941 108.8C390.641 108.3 389.441 108.05 388.341 108.05C387.241 108.05 386.441 108.3 385.941 108.8C385.441 109.2 385.041 109.65 384.741 110.15H383.091V89.15Z"}))),g||(g=l.createElement("path",{d:"M2 3.35H47.15V5.45H31.55L62.45 92.45H62.75L82.7 37.1L71.3 5.45H58.7V3.35H103.7V5.45H87.35L118.25 92.45H118.55L150.05 5.45H134V3.35H166.1V5.45H152.6L113.75 112.4H110L84.2 40.4H83.9L57.8 112.4H53.75L15.5 5.45H2V3.35Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})),w||(w=l.createElement("path",{d:"M171.441 78.05C171.441 85.15 171.991 90.8 173.091 95C174.191 99.2 175.641 102.45 177.441 104.75C179.241 106.95 181.341 108.4 183.741 109.1C186.141 109.8 188.691 110.15 191.391 110.15C194.091 110.15 196.641 109.8 199.041 109.1C201.441 108.4 203.541 106.95 205.341 104.75C207.141 102.45 208.591 99.2 209.691 95C210.791 90.8 211.341 85.15 211.341 78.05C211.341 72.05 210.941 67.05 210.141 63.05C209.341 58.95 208.091 55.65 206.391 53.15C204.791 50.55 202.741 48.7 200.241 47.6C197.741 46.5 194.791 45.95 191.391 45.95C187.991 45.95 185.041 46.5 182.541 47.6C180.041 48.7 177.941 50.55 176.241 53.15C174.641 55.65 173.441 58.95 172.641 63.05C171.841 67.05 171.441 72.05 171.441 78.05ZM156.441 78.05C156.441 73.15 157.491 68.6 159.591 64.4C161.791 60.2 164.541 56.6 167.841 53.6C171.241 50.5 174.991 48.1 179.091 46.4C183.291 44.7 187.391 43.85 191.391 43.85C195.391 43.85 199.441 44.7 203.541 46.4C207.741 48.1 211.491 50.5 214.791 53.6C218.191 56.6 220.941 60.2 223.041 64.4C225.241 68.6 226.341 73.15 226.341 78.05C226.341 82.75 225.341 87.2 223.341 91.4C221.341 95.5 218.691 99.1 215.391 102.2C212.191 105.3 208.491 107.75 204.291 109.55C200.091 111.35 195.791 112.25 191.391 112.25C186.991 112.25 182.691 111.35 178.491 109.55C174.291 107.75 170.541 105.3 167.241 102.2C164.041 99.1 161.441 95.5 159.441 91.4C157.441 87.2 156.441 82.75 156.441 78.05Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})),b||(b=l.createElement("path",{d:"M237.091 108.05H248.641V47.9H237.091V45.8H261.241V60.95H261.541C261.941 59.45 262.591 57.75 263.491 55.85C264.391 53.95 265.641 52.15 267.241 50.45C268.841 48.65 270.741 47.15 272.941 45.95C275.241 44.75 277.991 44.15 281.191 44.15C283.491 44.15 285.491 44.55 287.191 45.35C288.891 46.05 290.291 47 291.391 48.2C292.491 49.3 293.291 50.6 293.791 52.1C294.291 53.6 294.541 55.1 294.541 56.6C294.541 59.9 293.791 62.1 292.291 63.2C290.791 64.3 289.041 64.85 287.041 64.85C282.641 64.85 280.441 63.45 280.441 60.65C280.441 59.75 280.541 59.05 280.741 58.55C280.941 57.95 281.141 57.4 281.341 56.9C281.641 56.3 281.891 55.65 282.091 54.95C282.291 54.25 282.391 53.25 282.391 51.95C282.391 48.75 280.641 47.15 277.141 47.15C275.541 47.15 273.841 47.75 272.041 48.95C270.241 50.15 268.541 51.9 266.941 54.2C265.441 56.5 264.141 59.3 263.041 62.6C262.041 65.8 261.541 69.5 261.541 73.7V108.05H274.591V110.15H237.091V108.05Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})),V||(V=l.createElement("path",{d:"M298.325 108.05H309.875V4.1H298.325V2H322.775V73.7H324.425L354.275 47.9H343.625V45.8H366.875V47.9H357.875L334.475 68L367.625 108.05H374.075V110.15H340.325V108.05H350.975L324.425 75.8H322.775V108.05H331.025V110.15H298.325V108.05Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})),x||(x=l.createElement("path",{d:"M383.091 89.15H384.741C385.441 91.55 386.341 94 387.441 96.5C388.541 98.9 389.991 101.15 391.791 103.25C393.691 105.25 395.991 106.9 398.691 108.2C401.391 109.5 404.641 110.15 408.441 110.15C411.641 110.15 414.491 109.2 416.991 107.3C419.491 105.3 420.741 102.1 420.741 97.7C420.741 93.9 419.741 91.25 417.741 89.75C415.841 88.15 413.591 86.9 410.991 86L399.291 81.95C397.791 81.45 396.141 80.85 394.341 80.15C392.641 79.35 391.041 78.3 389.541 77C388.041 75.6 386.791 73.85 385.791 71.75C384.891 69.65 384.441 66.95 384.441 63.65C384.441 60.85 384.991 58.25 386.091 55.85C387.191 53.45 388.691 51.35 390.591 49.55C392.491 47.75 394.741 46.35 397.341 45.35C400.041 44.35 402.941 43.85 406.041 43.85C408.241 43.85 409.991 44.05 411.291 44.45C412.691 44.75 413.891 45.1 414.891 45.5C415.891 45.8 416.791 46.15 417.591 46.55C418.391 46.85 419.341 47 420.441 47C421.541 47 422.341 46.6 422.841 45.8H424.491V62.9H422.841C422.141 60.7 421.341 58.6 420.441 56.6C419.541 54.5 418.441 52.65 417.141 51.05C415.941 49.45 414.391 48.2 412.491 47.3C410.691 46.4 408.541 45.95 406.041 45.95C401.241 45.95 397.491 47.05 394.791 49.25C392.191 51.35 390.891 54.2 390.891 57.8C390.891 61 391.991 63.45 394.191 65.15C396.491 66.75 399.841 68.25 404.241 69.65L415.191 73.25C419.891 74.85 423.741 77.05 426.741 79.85C429.741 82.65 431.241 86.35 431.241 90.95C431.241 93.65 430.691 96.3 429.591 98.9C428.591 101.5 427.041 103.8 424.941 105.8C422.941 107.7 420.441 109.25 417.441 110.45C414.541 111.65 411.191 112.25 407.391 112.25C405.191 112.25 403.141 112 401.241 111.5C399.441 111.1 397.741 110.65 396.141 110.15C394.641 109.65 393.241 109.2 391.941 108.8C390.641 108.3 389.441 108.05 388.341 108.05C387.241 108.05 386.441 108.3 385.941 108.8C385.441 109.2 385.041 109.65 384.741 110.15H383.091V89.15Z",stroke:"black",strokeWidth:2,mask:"url(#path-1-outside-1)"})))}var M=l.forwardRef(E),z=(t.p,t(42),function(){Object(l.useEffect)((function(){return window.document.addEventListener("wheel",n),function(){return window.document.removeEventListener("wheel",n)}}),[]);var n=function(){};return Object(j.jsx)("div",{className:"page",id:"works",children:Object(j.jsx)("div",{className:"hero-container",children:Object(j.jsx)(M,{})})})}),F=function(){return Object(j.jsx)("div",{children:"generate"})},S=t(18),A=t(62),P=t(56),D=t(59),Z=t(57),I=t(58),T=t(4),_=t(60),B=t(31),U=t.n(B),W=(t(43),{mouse:new A.a(window.innerWidth/2,window.innerHeight/2),boxFactor:1,sphereFactor:.5}),G=Object.keys(W),N=function(){var n=Object(l.useRef)();return Object(l.useEffect)((function(){if(n.current){var e=new P.a({width:window.innerWidth,height:window.innerHeight,canvas:n.current}),t=new U.a;document.body.appendChild(t.dom);var r=e.gl;new D.a(r).position.set(0,0,0);var o=new Z.a(r,{position:{size:2,data:new Float32Array([-1,-1,3,-1,-1,3])},uv:{size:2,data:new Float32Array([0,0,2,0,0,2])}}),i=new I.a(r,{vertex:"\nprecision highp float;\n\nattribute vec2 uv;\nattribute vec2 position;\n\nvarying vec2 vUv;\n\nvoid main() {\n  vUv = uv;\n  gl_Position = vec4(position, 0, 1);\n}\n",fragment:"\nprecision highp float;\n\n#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .001\n#define IOR 1.45\n#define LCD 0.02\n#define RFL_STEPS 3\n#define AA 1\n\nuniform vec3 camPos;\nuniform vec2 mouse;\nuniform vec3 boxSize;\nuniform vec2 resolution;\nuniform float morphPower;\nuniform float boxThickness;\nuniform float boxFactor;\nuniform float sphereFactor;\nuniform float uTime;\n\nvec3 lights[2];\nvec3 projectedLights[2];\nfloat rIOR = 1.0 / IOR;\n\nstruct Reflection {\n  float power;\n  vec3 position;\n  vec3 direction;\n};\n\nmat2 rotate(float a) {\n  float s = sin(a);\n  float c = cos(a);\n  return mat2(c, s, -s, c);\n}\nfloat sdHexPrism(vec3 p, vec2 h) {\n  // p.yz *= rotate(uTime / 2.0);\n  // p.xz *= rotate(3.1415 * 0.5);\n  vec3 q = abs(p);\n  return max(q.z - h.y, max((q.x * 0.866025 + q.y * 0.5), q.y) - h.x);\n}\nfloat sdPlane(vec3 p) {\n  // p.xz *= rotate(uTime);\n  float d = dot(p, normalize(vec3(0.0, 1.0, 0.0)));\n  return d;\n}\nfloat sdBox(vec3 point, vec3 position, vec3 size) {\n  point += position;\n  point = abs(point) - size;\n  float morphAmount = 0.05;\n  return length(max(point, 0.)) + min(max(point.x, max(point.y, point.z)), 0.) - morphAmount;\n}\nfloat sdSphere(vec3 p, float s) {\n  p.z *= 1.5;\n  return length(p) - s;\n}\nfloat smin(float a, float b, float k) {\n  float h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n  return mix(b, a, h) - k * h * (1.0 - h);\n}\nfloat getDist(vec3 point) {\n  point.xz *= rotate(-(mouse.x - (resolution.x / 2.0)) / resolution.x);\n  point.yz *= rotate((mouse.y - (resolution.y / 2.0)) / resolution.y);\n\n  float box = sdBox(point, vec3(0.), boxSize * boxFactor);\n  // box = abs(box) - 0.2;\n  float sphere = sdSphere(point, 1.5 * sphereFactor);\n  // float prism = sdHexPrism(point, vec2(1.5));\n  // float plane = sdPlane(point);\n\n  // return box;\n  return smin(box, sphere, 0.1);\n  // return max(plane, box);\n}\nfloat rayMarch(vec3 ro, vec3 rd, float sign) {\n  float dO = 0.;\n\n  for(int i = 0; i < MAX_STEPS; i++) {\n    vec3 p = ro + rd * dO;\n    float dS = getDist(p) * sign;\n    dO += dS;\n    if(dO > MAX_DIST || abs(dS) < SURF_DIST)\n      break;\n  }\n\n  return dO;\n}\nvec3 getNormal(vec3 point) {\n  float d = getDist(point);\n  vec2 e = vec2(.001, 0);\n\n  vec3 n = d - vec3(getDist(point - e.xyy), getDist(point - e.yxy), getDist(point - e.yyx));\n\n  return normalize(n);\n}\n\nvoid rotateLights(vec3 rayOrigin, vec3 camRight, vec3 camUp, vec3 camForward) {\n  lights[0] = rayOrigin + lights[0].x * camRight + lights[0].y * camUp + lights[0].z * camForward;\n  lights[1] = rayOrigin + lights[1].x * camRight + lights[1].y * camUp + lights[1].z * camForward;\n\n  projectedLights[0] = lights[0] + normalize(-lights[0]) * rayMarch(lights[0], normalize(-lights[0]), 1.0) * 0.95;\n  projectedLights[1] = lights[1] + normalize(-lights[1]) * rayMarch(lights[1], normalize(-lights[1]), 1.0) * 0.95;\n}\n\nfloat getDiffuse(vec3 point, vec3 normal) {\n  // return 1.0;\n  return max(0.0, dot(normalize(lights[0] - point), normal));\n}\n\nfloat getLight(vec3 ro, vec3 rd) {\n  rd = normalize(rd);\n  float power = 0.;\n\n  float d = rayMarch(ro, rd, -1.0);\n\n  if(d < MAX_DIST) {\n    vec3 p = ro + rd * d;\n    vec3 n = -getNormal(p);\n\n    vec3 reflection = reflect(rd, n);\n    reflection = normalize(reflection);\n    vec3 refraction = refract(-rd, n, rIOR);\n    refraction = normalize(refraction);\n\n    float rfl0 = dot(normalize(lights[0] - p), n);\n    rfl0 = smoothstep(0.95, 1.0, rfl0);\n    float rfl1 = dot(normalize(lights[1] - p), n);\n    rfl1 = smoothstep(0.75, 1.0, rfl1);\n\n    float rfr0 = dot(normalize(projectedLights[0] - p), refraction);\n    rfr0 = smoothstep(0.0, 1.0, rfr0);\n    float rfr1 = dot(normalize(projectedLights[1] - p), refraction);\n    rfr1 = smoothstep(0.0, 1.0, rfr1);\n\n    power += rfl0;\n    power += rfl1;\n    power += rfr0;\n    power += rfr1;\n  }\n\n  return power;\n}\n\nReflection getReflection(Reflection inReflection, int step) {\n  inReflection.direction = normalize(inReflection.direction);\n  Reflection ir = inReflection;\n\n  // out reflection\n  Reflection or;\n  or.power = 0.;\n\n  float d = rayMarch(ir.position, ir.direction, -1.0);\n  if(d < MAX_DIST) {\n    or.position = ir.position + ir.direction * d;\n    vec3 n = -getNormal(or.position);\n\n    vec3 reflection = reflect(ir.direction, n);\n    reflection = normalize(reflection);\n    vec3 refraction = refract(-ir.direction, n, rIOR);\n    refraction = normalize(refraction);\n\n    float rfl0 = dot(normalize(lights[0] - or.position), reflection);\n    rfl0 = smoothstep(0.99, 1.0, rfl0);\n    // rfl0 = clamp(rfl0, 0.0, 1.0);\n    float rfl1 = dot(normalize(lights[1] - or.position), reflection);\n    rfl1 = smoothstep(0.97, 1.0, rfl1);\n    // rfl1 = clamp(rfl1, 0.0, 1.0);\n\n    float rfr0 = dot(normalize(projectedLights[0] - or.position), refraction);\n    rfr0 = smoothstep(0.0, 1.0, rfr0);\n    // rfr0 = clamp(rfr0, 0.0, 1.0);\n    float rfr1 = dot(normalize(projectedLights[1] - or.position), refraction);\n    rfr1 = smoothstep(0.0, 1.0, rfr1);\n    // rfr1 = clamp(rfr1, 0.0, 1.0);\n\n    or.power += rfl0;\n    or.power += rfl1;\n    or.power += rfr0;\n    or.power += rfr1;\n\n    or.direction = reflection;\n    or.position = or.position + reflection;\n\n    // or.power = min(1.0, or.power);\n    or.power = clamp(or.power, 0.0, 1.0);\n    // or.power /= 0.8 / float(step);\n  }\n\n  return or;\n}\n\nvarying vec2 vUv;\n\nvoid main() {\n  vec3 power = vec3(1.);\n\n  vec3 rayOrigin = camPos;\n  vec3 camForward = normalize(vec3(0.) - camPos);\n  vec3 camRight = normalize(cross(camForward, vec3(0., 1., 0.)));\n  vec3 camUp = normalize(cross(camRight, camForward));\n\n  lights[0] = vec3(-0.2, 1.5, 0.0);\n  lights[1] = vec3(0.2, -1.6, 0.0);\n\n  rotateLights(rayOrigin, camRight, camUp, camForward);\n\n  #if AA > 1\n  for(int m = 0; m < AA; m++)\n    for(int n = 0; n < AA; n++) {\n      vec2 o = vec2(float(m), float(n)) / float(AA) - 0.;\n      vec2 uv = (2. * gl_FragCoord.xy + o - resolution) / resolution.y;\n      uv *= 0.5;\n  #else\n      // vec2 uv = (2. * gl_FragCoord.xy - resolution) / resolution.y;\n      vec2 uv = vUv - 0.5;\n      uv.x *= resolution.x / resolution.y;\n      // uv *= 0.5;\n  #endif\n\n      vec3 rayDirection = uv.x * camRight + uv.y * camUp + camForward;\n\n      float dist = rayMarch(rayOrigin, rayDirection, 1.0);\n\n      if(dist < MAX_DIST) {\n        vec3 point = rayOrigin + rayDirection * dist;\n        vec3 normal = getNormal(point);\n\n        vec3 refractionR = refract(rayDirection, normal, rIOR + LCD);\n        vec3 refractionG = refract(rayDirection, normal, rIOR);\n        vec3 refractionB = refract(rayDirection, normal, rIOR - LCD);\n        // power -= getLight(point + refractionR, refractionR);\n        // power -= getDiffuse(point, normal);\n\n        Reflection rflR;\n        rflR.power = 0.;\n        rflR.direction = refractionR;\n        rflR.position = point + refractionR;\n\n        Reflection rflG;\n        rflG.power = 0.;\n        rflG.direction = refractionG;\n        rflG.position = point + refractionG;\n\n        Reflection rflB;\n        rflB.power = 0.;\n        rflB.direction = refractionB;\n        rflB.position = point + refractionB;\n\n        // for(int i = 0; i < RFL_STEPS; i++) {\n        //   rflR = getReflection(rflR, i);\n\n        //   power.r -= rflR.power;\n        // }\n        for(int i = 0; i < RFL_STEPS; i++) {\n          rflG = getReflection(rflG, i);\n\n          power -= rflG.power;\n        }\n        // for(int i = 0; i < RFL_STEPS; i++) {\n        //   rflB = getReflection(rflB, i);\n\n        //   power.b -= rflB.power;\n        // }\n        // power *= textureCube(bg, rflG.direction).rgb;\n      } else {\n        // uv.x /= resolution.x / resolution.y;\n        // uv += 0.5;\n        // power = textureCube(bg, rayDirection).rgb;\n      }\n#if AA > 1\n    }\n  // power /= float(AA * AA);\n#endif\n\n  power = clamp(power, 0.0, 1.0);\n  // power = pow(power, vec3(0.4545));\n\n  gl_FragColor = vec4(power, 1.0);\n}\n",uniforms:{uTime:{value:0},mouse:{value:new A.a(0)},boxSize:{value:new T.a(1)},camPos:{value:new T.a(0,2,5)},resolution:{value:new A.a(window.innerWidth,window.innerHeight)},boxFactor:{value:W.boxFactor},sphereFactor:{value:W.sphereFactor}}}),a=new _.a(r,{geometry:o,program:i});window.addEventListener("resize",(function(){e.setSize(window.innerWidth,window.innerHeight),i.uniforms.resolution.value=new A.a(window.innerWidth,window.innerHeight)})),requestAnimationFrame((function n(r){e.render({scene:a}),t.update(),i.uniforms.uTime.value=r/1e3,G.forEach((function(n){i.uniforms[n].value=W[n]})),requestAnimationFrame(n)}))}}),[]),Object(j.jsx)("div",{id:"canvas-container",children:Object(j.jsx)("canvas",{ref:n})})},X=1e3,q=[{path:"/",Component:O,name:"Home"},{path:"/works",Component:z,name:"Works"},{path:"/generate",Component:F,name:"Generate"}],J=function(){return Object(j.jsx)(j.Fragment,{children:q.map((function(n){var e=n.path,t=n.Component;return Object(j.jsx)(u.a,{exact:!0,path:e,children:function(n){var r=n.match;return Object(j.jsx)(p.a,{in:null!=r,timeout:X,onEnter:function(n,t){return function(n,e){"/works"===e?S.a.to(W,{duration:2,boxFactor:.5,sphereFactor:1}):"/"===e&&S.a.to(W,{duration:2,boxFactor:1,sphereFactor:.5}),S.a.fromTo(n,{opacity:0,duration:1},{opacity:1})}(n,e)},onExit:function(n){return e=n,void S.a.fromTo(e,{opacity:1,duration:1},{opacity:0});var e},unmountOnExit:!0,children:Object(j.jsx)("div",{children:Object(j.jsx)(t,{})})})}},e)}))})},Y=t(34),K=Object(Y.a)((function(n,e){return{mousePos:{x:0,y:0},mouseActive:!1,setMousePos:function(e){return W.mouse.x=e.x,W.mouse.y=e.y,n((function(){return{mousePos:e}}))},setMouseActive:function(e){return n((function(){return{mouseActive:e}}))}}})),Q=function(n){var e=n.children,t=K((function(n){return n.setMouseActive}));return Object(j.jsx)("span",{style:{overflow:"hidden"},onMouseEnter:function(){t(!0)},onMouseLeave:function(n){t(!1),S.a.to(n.target,{x:0,y:0,duration:.3})},onMouseMove:function(n){var e=n.target.getBoundingClientRect(),t=(n.nativeEvent.offsetX-e.width/2)/(e.width/2),r=(n.nativeEvent.offsetY-e.height/2)/(e.height/2);S.a.to(n.target,{x:25*t,y:25*r,duration:.2})},children:e})},$=(t(49),function(){return Object(j.jsx)("div",{id:"navbar",children:q.map((function(n){var e=n.path,t=n.name;return Object(j.jsx)(Q,{children:Object(j.jsx)(f.b,{to:e,children:t})},t)}))})}),nn=(t(50),function(){var n=K((function(n){return n.mousePos})),e=K((function(n){return n.mouseActive})),t={left:n.x,bottom:window.innerHeight-n.y};return Object(j.jsx)("div",{id:"mouse",style:t,className:e?"active":""})}),en=(t(51),function(){var n=K((function(n){return n.setMousePos}));return Object(j.jsx)("div",{onMouseMove:function(e){n({x:e.clientX,y:e.clientY})},children:Object(j.jsxs)(f.a,{children:[Object(j.jsx)(N,{}),Object(j.jsx)($,{}),Object(j.jsxs)("div",{className:"container",children:[Object(j.jsx)(nn,{}),Object(j.jsx)(J,{})]})]})})});s.a.render(Object(j.jsx)(en,{}),document.getElementById("root"))}},[[52,1,2]]]);
//# sourceMappingURL=main.e1569353.chunk.js.map